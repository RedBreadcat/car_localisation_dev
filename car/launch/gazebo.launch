<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find car)/worlds/scatteredObjects.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server. Need to be called robot_description for the state publisher it seems -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find car)/urdf/car.xacro'" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model car -param robot_description -z 3"/>

  <!-- rviz launch file -->
  <!--<include file="$(find car)/launch/rviz.launch" />-->

  <!-- ros_control launch file -->
  <include file="$(find car)/launch/car_control.launch" />

  <node name="image_view_left" pkg="image_view" type="image_view" respawn="false" output="screen">
    <remap from="image" to="/camera/left/image_raw" />
  </node>

  <node name="image_view_right" pkg="image_view" type="image_view" respawn="false" output="screen">
    <remap from="image" to="/camera/right/image_raw" />
  </node>

 <!--
  <include file="$(find orbslam2)/launch/slamgazebo.launch"/>
 -->
</launch>
