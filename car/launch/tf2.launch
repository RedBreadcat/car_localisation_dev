<launch>
    <!-- Note: I think I can move this into an urdf and use robot_state_publisher -->

    <!--Rotation along x axis by 180 degrees (1 0 0 0 quat) to line up IMU with ROS standard. TODO: translation-->
    <!-- IMU is in the same position as the base_link, but rotated -->
    <!--<node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_vectornav" args="0 0 0 1 0 0 0 base_link vectornav" />-->

    <node pkg="tf2_ros" type="static_transform_publisher" name="tf_imu_ned_enu" args="0 0 0 1.5708 0 3.1416 vectornav vectornav_enu"/>

    <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_vectornav" args="0 0 0 0 0 0 1 base_link vectornav_enu" />

    <node pkg="imu_transformer" type="imu_transformer_node" name="imu_data_transformer" output="screen">
        <remap from="imu_in" to="/imu"/>
        <remap from="imu_out" to="/imu_enu"/>
        <param name="target_frame" value="vectornav_enu"/>
    </node>

    <!-- LIDAR is already correctly rotated so quaternion is identity, but the position is up and forward of the base_link -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_velodyne" args="0.3 0 0.3 0 0 0 1 base_link velodyne" />

    <!-- GPS is already correctly rotated so quaternion is identity, but the position is up and forward of the base_link. Not as far as the LIDAR however -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_gps" args="0.15 0 0.3 0 0 0 1 base_link gps_tf" />
</launch>